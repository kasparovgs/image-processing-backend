services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d mydatabase" ]
      interval: 5s
      timeout: 10s
      retries: 5
  migrate:
    image: migrate/migrate:4
    command: [
      "-path=/migrations",
      "-database=postgres://user:password@db:5432/mydatabase?sslmode=disable",
      "up"
    ]
    volumes:
      - ./user_backend/migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    profiles: ["migrate"]

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: user_backend/Dockerfile
    environment:
      DB_CONN_STR: "postgres://user:password@db:5432/mydatabase?sslmode=disable"
    ports:
      - "8080:8080"
    depends_on:
      broker:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  app_test:
    build:
      context: ./tests
      dockerfile: Dockerfile
    environment:
      BASE_URL: http://app:8080
    depends_on:
      app:
        condition: service_started
    profiles: ['test']

  broker:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 30s
      retries: 3
  
  image_processor:
    build:
      context: .
      dockerfile: image_processor/Dockerfile
    depends_on:
      broker:
        condition: service_healthy
