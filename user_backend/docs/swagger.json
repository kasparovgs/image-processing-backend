{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "My API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/login": {
            "post": {
                "description": "Authenticates a user with login and password, returns a sessionID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logs in a user",
                "parameters": [
                    {
                        "description": "Login and password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.PostRegisterUserHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PostRegisterUserHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Incorrect login or password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user and issue their sessionID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Registers a new user",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.PostRegisterUserHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "User with this username already exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/result/{task_id}": {
            "get": {
                "security": [
                    {
                        "SessionIDAuth": []
                    }
                ],
                "description": "Get result of a task by its uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get result of a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the task",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetTaskResultHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "the task is still in process",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status/{task_id}": {
            "get": {
                "security": [
                    {
                        "SessionIDAuth": []
                    }
                ],
                "description": "Get status of a task by its uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get status of a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the task",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "security": [
                    {
                        "SessionIDAuth": []
                    }
                ],
                "description": "Submit the task with image upload and returns task_id (uint64)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Submit the task for processing and returns task_id",
                "parameters": [
                    {
                        "description": "Image in base64 and filters",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.PostTaskHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The task is running successfully",
                        "schema": {
                            "$ref": "#/definitions/types.PostTaskHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Filter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "types.GetTaskResultHandlerResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "types.PostRegisterUserHandlerRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.PostRegisterUserHandlerResponse": {
            "type": "object",
            "properties": {
                "sessionID": {
                    "type": "string"
                }
            }
        },
        "types.PostTaskHandlerRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/domain.Filter"
                },
                "image": {
                    "type": "string"
                }
            }
        },
        "types.PostTaskHandlerResponse": {
            "type": "object",
            "properties": {
                "task_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "SessionIDAuth": {
            "description": "Type \"Bearer\" followed by a space and your token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}